name: SAST - Semgrep Security Scan
on:
  workflow_dispatch:
  pull_request:
  workflow_call:

permissions:
  contents: read
  pull-requests: write

jobs:
  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep Scan
        id: scan
        run: |
          semgrep scan \
            --config=auto \
            --severity ERROR \
            --output=semgrep-results.json \
            --json | tee semgrep-results.txt
        continue-on-error: true

      - name: Display results
        if: always()
        run: |
          echo "## Semgrep Security Scan Results"
          cat semgrep-results.txt

      - name: Process Results
        if: always()
        id: results
        run: |
          # Get vulnerability counts by type
          TOTAL=$(jq '.results | length' semgrep-results.json)
          CRITICAL=$(jq '.results[] | select(.extra.severity == "ERROR") | .check_id' semgrep-results.json | wc -l)
          HIGH=$(jq '.results[] | select(.extra.severity == "WARNING") | .check_id' semgrep-results.json | wc -l)

          echo "total=${TOTAL:-0}" >> $GITHUB_OUTPUT
          echo "critical=${CRITICAL:-0}" >> $GITHUB_OUTPUT
          echo "high=${HIGH:-0}" >> $GITHUB_OUTPUT

          # Format findings for summary
          echo "## Semgrep Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Summary" >> $GITHUB_STEP_SUMMARY
          echo "- üî• Critical: ${CRITICAL:-0}" >> $GITHUB_STEP_SUMMARY
          echo "- ‚ö†Ô∏è High: ${HIGH:-0}" >> $GITHUB_STEP_SUMMARY
          echo "- üìä Total: ${TOTAL:-0}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${TOTAL:-0}" != "0" ]]; then
            echo "<details><summary>Click to see findings</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # Process each finding
            jq -r '.results[] | "### " + .path + ":" + (.start.line|tostring) + "\n" +
                  "**Severity:** " + .extra.severity + "\n" +
                  "**Category:** " + .extra.metadata.category + "\n" +
                  "**CWE:** " + (.extra.metadata.cwe[0]|split(":")[0]) + "\n" +
                  "**Message:** " + .extra.message + "\n" +
                  "```\n" + .lines + "\n```\n"' semgrep-results.json >> $GITHUB_STEP_SUMMARY

            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('semgrep-results.txt', 'utf8');
            const total = ${{ steps.results.outputs.total }};

            const summary = `## Semgrep Security Scan Results

            ${total === 0
              ? '‚úÖ No security issues found'
              : `‚ö†Ô∏è ${total} security issues detected\n
              <details>
              <summary>Click to see findings</summary>

              \`\`\`
              ${results}
              \`\`\`
              </details>`}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Upload Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results
          path: |
            semgrep-results.txt
            semgrep-results.json
