name: Secrets - GitGuardian Secret Scan

on:
  workflow_dispatch:
  pull_request:
  workflow_call:
    secrets:
      GITGUARDIAN_API_KEY:
        required: true

permissions:
  contents: read
  pull-requests: write

jobs:
  ggshield:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: GitGuardian scan
        id: scan
        uses: GitGuardian/ggshield/actions/secret@v1.38.0
        continue-on-error: true
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: Add to Job Summary
        if: always()
        run: |
          echo "## GitGuardian Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.scan.outcome }}" == "success" ]]; then
            echo "✅ **No secrets were detected**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Potential secrets were detected**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "<details><summary>Click to see scan output</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "${{ steps.scan.outputs.output }}" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const outcome = '${{ steps.scan.outcome }}';
            const summary = `## GitGuardian Security Scan Results\n\n` +
              (outcome === 'success'
                ? '✅ No secrets were detected'
                : '⚠️ Potential secrets were detected - Please review the workflow run for details');

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
