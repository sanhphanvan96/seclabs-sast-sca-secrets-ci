name: SAST - CodeQL Security Scan

on:
  workflow_dispatch:
  pull_request:
  workflow_call:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  codeql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          output: ./results.sarif  # Specify full path

      - name: Install sarif-to-markdown
        run: npm install -g @security-alert/sarif-to-markdown  # Install globally

      - name: Process Results
        id: results
        run: |
          # Ensure output directory exists
          mkdir -p ./output

          # Initialize summary file if not exists
          echo "## CodeQL Security Scan Results" > $GITHUB_STEP_SUMMARY
          echo "### Detailed Findings" >> $GITHUB_STEP_SUMMARY

          # Convert SARIF to Markdown and append to summary
          if [ -f ./results.sarif ]; then
            npx sarif-to-markdown ./results.sarif >> $GITHUB_STEP_SUMMARY
          else
            echo "No results file found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let summary = "## CodeQL Security Scan Results\n\n";

            try {
              const sarifData = JSON.parse(fs.readFileSync('./results.sarif', 'utf8'));
              const counts = {
                high: 0,
                medium: 0,
                low: 0
              };

              sarifData.runs[0]?.results?.forEach(result => {
                switch(result.level) {
                  case 'error': counts.high++; break;
                  case 'warning': counts.medium++; break;
                  case 'note': counts.low++; break;
                }
              });

              summary += `**HIGH:** ${counts.high}\n` +
                        `**MEDIUM:** ${counts.medium}\n` +
                        `**LOW:** ${counts.low}\n`;
            } catch (e) {
              summary += "Failed to process scan results\n";
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Upload SARIF Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results
          path: ./results.sarif
