name: SCA - OWASP Dependency Check

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  workflow_call:

permissions:
  contents: read
  pull-requests: write

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: depcheck
        with:
          project: "Python Flask API"
          path: "./"
          format: "ALL"
          out: "reports"
          # https://jeremylong.github.io/DependencyCheck/dependency-check-cli/arguments.html
          # --nvdApiKey: Uses the NVD API key stored in GitHub Secrets for accessing the National Vulnerability Database
          # --failOnCVSS 7: Fails the scan if any vulnerabilities with a CVSS score of 7 or higher are found
          args: "--nvdApiKey=${{ secrets.NVD_API_KEY }} --failOnCVSS 7 --prettyPrint"

      # Extract summary from JSON report
      - name: Extract Summary from Report
        if: always()
        id: summary
        run: |
          # Use jq to extract key info from JSON report
          TOTAL_VULNS=$(jq '.dependencies[]?.vulnerabilities | length' reports/dependency-check-report.json | awk '{s+=$1} END {print s}')
          CRITICAL=$(jq '.dependencies[].vulnerabilities[] | select(.severity == "CRITICAL") | .name' reports/dependency-check-report.json | wc -l)
          HIGH=$(jq '.dependencies[].vulnerabilities[] | select(.severity == "HIGH") | .name' reports/dependency-check-report.json | wc -l)
          MEDIUM=$(jq '.dependencies[].vulnerabilities[] | select(.severity == "MEDIUM") | .name' reports/dependency-check-report.json | wc -l)
          LOW=$(jq '.dependencies[].vulnerabilities[] | select(.severity == "LOW") | .name' reports/dependency-check-report.json | wc -l)

          # Set outputs for summary
          echo "total_vulns=${TOTAL_VULNS:-0}" >> $GITHUB_OUTPUT
          echo "critical=${CRITICAL:-0}" >> $GITHUB_OUTPUT
          echo "high=${HIGH:-0}" >> $GITHUB_OUTPUT
          echo "medium=${MEDIUM:-0}" >> $GITHUB_OUTPUT
          echo "low=${LOW:-0}" >> $GITHUB_OUTPUT

      # Add results to Job Summary
      - name: Add to Job Summary
        if: always()
        run: |
          echo "## OWASP Dependency Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Full report available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Vulnerabilities**: ${{ steps.summary.outputs.total_vulns }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Critical**: ${{ steps.summary.outputs.critical }}" >> $GITHUB_STEP_SUMMARY
          echo "- **High**: ${{ steps.summary.outputs.high }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Medium**: ${{ steps.summary.outputs.medium }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Low**: ${{ steps.summary.outputs.low }}" >> $GITHUB_STEP_SUMMARY

      # Comment on PR with summary
      - name: Comment PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const totalVulns = '${{ steps.summary.outputs.total_vulns }}';
            const critical = '${{ steps.summary.outputs.critical }}';
            const high = '${{ steps.summary.outputs.high }}';
            const medium = '${{ steps.summary.outputs.medium }}';
            const low = '${{ steps.summary.outputs.low }}';

            const summary = `## OWASP Dependency Check Results\n\n` +
              `Total Vulnerabilities: **${totalVulns}**\n` +
              `- Critical: ${critical}\n` +
              `- High: ${high}\n` +
              `- Medium: ${medium}\n` +
              `- Low: ${low}\n\n` +
              `Full report available in workflow artifacts`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      # Upload reports as artifacts
      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: |
            reports/dependency-check-report.html
            reports/dependency-check-report.csv
            reports/dependency-check-report.sarif
            reports/dependency-check-report.json
